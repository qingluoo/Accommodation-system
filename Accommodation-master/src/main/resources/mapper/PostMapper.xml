<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scu.Accommodation.mapper.PostMapper">

    <resultMap id="BaseResultMap" type="com.scu.Accommodation.model.entity.Post">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="tags" column="tags" jdbcType="VARCHAR"/>
        <result property="thumbNum" column="thumbNum" jdbcType="BIGINT"/>
        <result property="favourNum" column="favourNum" jdbcType="BIGINT"/>
        <result property="userId" column="userId" jdbcType="BIGINT"/>
        <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
        <result property="isDelete" column="isDelete" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,title,content,tags,
        thumbNum,favourNum,userId,
        createTime,updateTime,isDelete
    </sql>

    <select id="listPostWithDelete" resultType="com.scu.Accommodation.model.entity.Post">
        select *
        from post
        where updateTime >= #{minUpdateTime}
    </select>

    <delete id="batchDeletePosts" parameterType="java.util.List">
        delete from post
        where id in
        <foreach item="id" index="index" collection="ids"
                 open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <insert id="batchInsertPosts" parameterType="java.util.List">
        insert into post (id, title, content, tags, thumbNum, favourNum, userId, createTime, updateTime, isDelete)
        values
        <foreach item="post" index="index" collection="posts"
                 separator=",">
            (#{post.id}, #{post.title}, #{post.content}, #{post.tags}, #{post.thumbNum}, #{post.favourNum}, #{post.userId}, #{post.createTime}, #{post.updateTime}, #{post.isDelete})
        </foreach>
    </insert>



</mapper>
